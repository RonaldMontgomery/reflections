When would you want to use a remote repository rather than keeping all your work local?
If you are collaborating with someone else. If you want to share yor work. If you want an offsite backup for your work.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
If you are sharing your remote repository you don't have control over the changes. You don't have control over the merge of these changes if it's done automatically.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks - A fork is when you create a new branch for a project. It's a duplicate of the repository. You would use it to test new features, let another person work on your code, or basically any changes. Your master branch should always be prod-ready and tested. 
Clones - A clone is when you copy a repository wholesale. This is useful when you want to copy code from a remote repository for local work, and then to push up changes. A clone can also be done locally.
Branches - A branch is anyplace where the head can be. Used to develip features or do other work to be merged back with the master.

What is the benefit of having a copy of the last known state of the remote stored locally?
It is a snapshot/baseline for comparison. It can be restored in the event of disasterous change on the remote repository.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Oh, probably a saved file on a website like google Docs, or a fileshare or file sharing service. It would be as easy as copying it down and up, but tracking changes and versions would be a mess.